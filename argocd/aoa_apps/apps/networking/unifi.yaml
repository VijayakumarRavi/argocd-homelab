apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: unifi
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "100"
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: default
  destination:
    name: in-cluster
    namespace: unifi
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
    managedNamespaceMetadata:
      labels:
        goldilocks.fairwinds.com/enabled: "true"
        # pod-security.kubernetes.io/enforce: privileged
  sources:
    - repoURL: https://bjw-s-labs.github.io/helm-charts
      chart: app-template
      targetRevision: 4.2.0
      helm:
        releaseName: unifi
        valuesObject:

          controllers:
            unifi:
              containers:

                db:
                  image:
                    repository: docker.io/mongo
                    tag: 8.0.11-noble
                  env:
                    MONGO_AUTHSOURCE: admin
                    MONGO_INITDB_ROOT_USERNAME: root
                    MONGO_INITDB_ROOT_PASSWORD: <path:cluster-secrets:cluster-secrets#unifi-mongo-root-password>
                    MONGO_USER: unifi
                    MONGO_PASS: <path:cluster-secrets:cluster-secrets#unifi-mongo-password>
                    MONGO_DBNAME: unifi
                app:
                  image:
                    repository: lscr.io/linuxserver/unifi-network-application
                    tag: 9.3.45-ls100
                  env:
                    PUID: 1000
                    PGID: 1000
                    # UNIFI_HTTPS_PORT: 443
                    TZ: Etc/UTC
                    MONGO_USER: unifi
                    MONGO_PASS: <path:cluster-secrets:cluster-secrets#unifi-mongo-password>
                    MONGO_HOST: localhost
                    MONGO_PORT: 27017
                    MONGO_DBNAME: unifi
                    MONGO_AUTHSOURCE: admin
                    MEM_LIMIT: 1024 #optional
                    MEM_STARTUP: 1024 #optional
                    # MONGO_TLS= #optional

          service:
            app:
              controller: unifi
              type: LoadBalancer
              annotations:
                io.cilium/lb-ipam-ips: 10.0.5.218
              externalTrafficPolicy: Cluster
              ports:
                # https: # not sure this is legit
                #   port: 443
                #   protocol: HTTPS
                controller:
                  port: 8080
                  protocol: TCP
                portal-http:
                  port: 8880
                  protocol: HTTP
                portal-https: # Used for application GUI/API as seen in a web browser.
                  port: 8443
                  protocol: HTTPS
                portal-https-r: # Hotspot portal redirection (HTTPS).
                  port: 8843
                  protocol: HTTPS
                speedtest:
                  port: 6789
                  protocol: TCP
                stun:
                  port: 3478
                  protocol: UDP
                syslog:
                  port: 5514
                  protocol: UDP
                discovery:
                  port: 10001
                  protocol: UDP

          # service:
          #   unifi-app:
          #     controller: unifi
          #     ports:
          #       http:
          #         port: 8443

          route:
            main:
              parentRefs:
                - name: internal
                  namespace: gateway
                  # sectionName: https
              hostnames:
                - unifi-k8s.<path:cluster-secrets:cluster-secrets#domain>
              rules:
                - matches:
                    - path:
                        type: PathPrefix
                        value: /
                  backendRefs:
                    - kind: Service
                      port: 8443
                      name: unifi
                      namespace: unifi
                      weight: 1
                  tls:
                    hostname: unifi-k8s.<path:cluster-secrets:cluster-secrets#domain>

          persistence:
            app-data:
              type: persistentVolumeClaim
              existingClaim: unifi-app
              advancedMounts:
                unifi: # <- the controller
                  app:   # <- the container
                    - path: /config
            db-data:
              type: persistentVolumeClaim
              existingClaim: unifi-db
              advancedMounts:
                unifi: # <- the controller
                  db:   # <- the container
                    - path: /data/db
            db-init:
              enabled: true
              type: configMap
              name: db-init
              advancedMounts:
                unifi: # <- the controller
                  db:   # <- the container
                    - path: /docker-entrypoint-initdb.d # /init-mongo.sh

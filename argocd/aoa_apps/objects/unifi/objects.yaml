---
apiVersion: v1
kind: ConfigMap
metadata:
  name: db-init
  namespace: unifi
data:
  init-mongo.sh: |
    #!/bin/bash

    if which mongosh > /dev/null 2>&1; then
      mongo_init_bin='mongosh'
    else
      mongo_init_bin='mongo'
    fi
    "${mongo_init_bin}" <<EOF
    use ${MONGO_AUTHSOURCE}
    db.auth("${MONGO_INITDB_ROOT_USERNAME}", "${MONGO_INITDB_ROOT_PASSWORD}")
    db.createUser({
      user: "${MONGO_USER}",
      pwd: "${MONGO_PASS}",
      roles: [
        { db: "${MONGO_DBNAME}", role: "dbOwner" },
        { db: "${MONGO_DBNAME}_stat", role: "dbOwner" },
        { db: "${MONGO_DBNAME}_audit", role: "dbOwner" }
      ]
    })
    EOF

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: app-init
  namespace: unifi
data:
  init.sh: |
    #!/bin/bash
    sleep 5
    # this could be better obv
    openssl x509 -in /tmp/cert/tls.crt -out /tmp/server.crt
    openssl pkcs12 -export -in /tmp/server.crt -inkey /tmp/cert/tls.key -out /tmp/keystore.p12 -name unifi -passout pass:aircontrolenterprise
    rm -rf /config/data/keystore
    keytool -importkeystore -srckeystore /tmp/keystore.p12 -srcstoretype PKCS12 -srcstorepass aircontrolenterprise -srcalias unifi -destkeystore /config/data/keystore -deststorepass aircontrolenterprise -destkeypass aircontrolenterprise

---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: cert-unifi-k8s
  namespace: unifi
spec:
  dnsNames:
    - 'unifi-k8s.<path:cluster-secrets:cluster-secrets#domain>'
    - 'unifi-mgmt-k8s.<path:cluster-secrets:cluster-secrets#domain>'
  issuerRef:
    kind: ClusterIssuer
    name: letsencrypt-production
  secretName: cert-unifi-k8s


########### GATEWAY ############
---
apiVersion: gateway.networking.k8s.io/v1
kind: Gateway
metadata:
  name: unifi-gateway
  namespace: unifi
spec:
  gatewayClassName: cilium
  addresses:
    - value: 10.0.5.218
  listeners:
  - name: mgmt-https
    port: 8443
    protocol: TLS
    hostname: unifi-mgmt-k8s.piccola.us
    tls:
      mode: Passthrough
    allowedRoutes:
      namespaces:
        from: Same
  - name: dev-comm
    port: 8080
    protocol: HTTP
    hostname: unifi-mgmt-k8s.piccola.us
    allowedRoutes:
      namespaces:
        from: Same
  - name: stun
    port: 3478
    protocol: UDP
    allowedRoutes:
      namespaces:
        from: Same
  - name: inform
    port: 10001
    protocol: UDP
    allowedRoutes:
      namespaces:
        from: Same
  - name: discovery
    port: 1900
    protocol: UDP
    allowedRoutes:
      namespaces:
        from: Same
  # - name: http-portal
  #   port: 80
  #   protocol: HTTP
  #   hostname: unifi-k8s.piccola.us
  #   allowedRoutes:
  #     namespaces:
  #       from: Same
  # - name: https-portal
  #   port: 443
  #   protocol: HTTPS
  #   hostname: unifi-k8s.piccola.us
  #   tls:
  #     mode: Terminate
  #     certificateRefs:
  #       - kind: Secret
  #         name: cert-unifi-k8s
  #   allowedRoutes:
  #     namespaces:
  #       from: Same

########### UDP CONTROLLER ROUTES ############
---
apiVersion: gateway.networking.k8s.io/v1alpha2
kind: UDPRoute
metadata:
  name: unifi-udproute
  namespace: unifi
spec:
  parentRefs:
  - name: unifi-gateway
  rules:
  - backendRefs:
    - name: unifi
      port: 3478
  - backendRefs:
    - name: unifi
      port: 10001
  - backendRefs:
    - name: unifi
      port: 1900
---
########### CONTROLLER ROUTES ############
apiVersion: gateway.networking.k8s.io/v1alpha2
kind: TLSRoute
metadata:
  name: unifi-tlsroute-8443
  namespace: unifi
spec:
  parentRefs:
  - name: unifi-gateway
    namespace: unifi
    sectionName: mgmt-https
  hostnames:
  - unifi-mgmt-k8s.piccola.us
  rules:
  - backendRefs:
    - name: unifi
      port: 8443
---
apiVersion: gateway.networking.k8s.io/v1beta1
kind: HTTPRoute
metadata:
  name: unifi-httproute-8080
  namespace: unifi
spec:
  parentRefs:
  - name: unifi-gateway
    namespace: unifi
    sectionName: dev-comm
  hostnames:
  - unifi-mgmt-k8s.piccola.us
  rules:
  - backendRefs:
    - name: unifi
      port: 8080
# ---
# ########### PORTAL ROUTES ############
# apiVersion: gateway.networking.k8s.io/v1beta1
# kind: HTTPRoute
# metadata:
#   name: portal-httproute-443
#   namespace: unifi
# spec:
#   parentRefs:
#   - name: unifi-gateway
#     namespace: unifi
#     sectionName: https-portal
#   hostnames:
#   - unifi-k8s-portal.piccola.us
#   rules:
#   - backendRefs:
#     - name: unifi
#       port: 80
# ---
# apiVersion: gateway.networking.k8s.io/v1beta1
# kind: HTTPRoute
# metadata:
#   name: portal-redirect-http-to-https
#   namespace: unifi
# spec:
#   parentRefs:
#     - name: unifi-gateway
#       namespace: unifi
#       sectionName: http-portal
#   hostnames:
#   - unifi-k8s-portal.piccola.us
#   rules:
#     - filters:
#         - type: RequestRedirect
#           requestRedirect:
#             scheme: https
#             statusCode: 301

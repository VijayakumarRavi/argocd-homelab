---
apiVersion: external-secrets.io/v1
kind: ClusterSecretStore
metadata:
  name: onepassword
  namespace: cluster-secrets
spec:
  provider:
    onepassword:
      connectHost: http://onepassword-connect.onepassword.svc.cluster.local:8080
      vaults:
        k8s_home: 1
      auth:
        secretRef:
          connectTokenSecretRef:
            name: onepassword-token
            namespace: onepassword
            key: token

---
apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: cluster-secrets
  namespace: cluster-secrets
spec:
  secretStoreRef:
    kind: ClusterSecretStore
    name: onepassword
  target:
    creationPolicy: Owner
  data:
    - secretKey: test-item
      remoteRef:
        key: cluster-secrets
        property: test-item
    - secretKey: personalemail
      remoteRef:
        key: cluster-secrets
        property: personalemail
    - secretKey: domain
      remoteRef:
        key: cluster-secrets
        property: domain
    - secretKey: pihole-admin-password
      remoteRef:
        key: cluster-secrets
        property: pihole-admin-password
    - secretKey: frigate-camera-user
      remoteRef:
        key: cluster-secrets
        property: frigate-camera-user
    - secretKey: frigate-camera-password
      remoteRef:
        key: cluster-secrets
        property: frigate-camera-password
    # these are sync'd here as well so ArgoCD Vault Plugin can inject them into the frigate config
    # these are also synd'd to emqx's ns as well under an emqx secret
    - secretKey: emqx-frigate-user
      remoteRef:
        key: cluster-secrets
        property: emqx-frigate-user
    - secretKey: emqx-frigate-password
      remoteRef:
        key: cluster-secrets
        property: emqx-frigate-password

--- # this one is a bit special, it is created for cert-manager to access 'cloudflare-api-token-secret' it must exists in cert-manager's ns
apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: cert-manager-secrets
  namespace: cert-manager
spec:
  secretStoreRef:
    kind: ClusterSecretStore
    name: onepassword
  target:
    creationPolicy: Owner
  data:
    - secretKey: cloudflare-api-token-secret # this is the name of the native k8s secret to create
      remoteRef:
        key: cluster-secrets # this is the title of the item in 1password
        property: cloudflare-token # this is the name of the property on the 1password item

---
apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: cifs-secret
  namespace: longhorn-system
spec:
  secretStoreRef:
    kind: ClusterSecretStore
    name: onepassword
  target:
    creationPolicy: Owner
  data:
    - secretKey: CIFS_USERNAME # this is the name of the native k8s secret to create
      remoteRef:
        key: cluster-secrets # this is the title of the item in 1password
        property: longhorn-cifs-username # this is the name of the property on the 1password item
    - secretKey: CIFS_PASSWORD # this is the name of the native k8s secret to create
      remoteRef:
        key: cluster-secrets # this is the title of the item in 1password
        property: longhorn-cifs-password # this is the name of the property on the 1password item

---
apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: grafana-secrets
  namespace: grafana
spec:
  secretStoreRef:
    kind: ClusterSecretStore
    name: onepassword
  target:
    creationPolicy: Owner
  data:
    - secretKey: grafana-admin-user # this is the name of the native k8s secret to create
      remoteRef:
        key: cluster-secrets # this is the title of the item in 1password
        property: grafana-admin-user # this is the name of the property on the 1password item
    - secretKey: grafana-admin-password # this is the name of the native k8s secret to create
      remoteRef:
        key: cluster-secrets # this is the title of the item in 1password
        property: grafana-admin-password # this is the name of the property on the 1password item

---
apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: emqx-secrets
  namespace: emqx
spec:
  secretStoreRef:
    kind: ClusterSecretStore
    name: onepassword
  target:
    creationPolicy: Owner
  data:
    # emqx bits
    - secretKey: EMQX_DASHBOARD__DEFAULT_PASSWORD
      remoteRef:
        key: cluster-secrets
        property: emqx-dashboard-password
    # frigate creds
    - secretKey: EMQX_AUTH__USER__1__USERNAME
      remoteRef:
        key: cluster-secrets
        property: emqx-frigate-user
    - secretKey: EMQX_AUTH__USER__1__PASSWORD
      remoteRef:
        key: cluster-secrets
        property: emqx-frigate-password
    # ha creds
    - secretKey: EMQX_AUTH__USER__2__USERNAME
      remoteRef:
        key: cluster-secrets
        property: emqx-ha-user
    - secretKey: EMQX_AUTH__USER__2__PASSWORD
      remoteRef:
        key: cluster-secrets
        property: emqx-ha-password
